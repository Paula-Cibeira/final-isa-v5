version: '3.8'

services:
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  blog:
    build: .
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      # Cambia la URL de la base de datos a H2
      - SPRING_DATASOURCE_URL=jdbc:h2:file:./target/h2db/db/blog;DB_CLOSE_DELAY=-1
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_LIQUIBASE_URL=jdbc:h2:file:./target/h2db/db/blog;DB_CLOSE_DELAY=-1
      - LOGSTASH_HOST=logstash
    ports:
      - '8080:8080'
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    container_name: logstash
    ports:
      - '5000:5000'
      - '9600:9600'
    configs:
      - source: logstash_config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash_pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: '-Xmx256m -Xms256m'
    deploy:
      mode: replicated
      replicas: 1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    ports:
      - '5601:5601'
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    deploy:
      mode: replicated
      replicas: 1

configs:
  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  logstash_config:
    file: ./logstash/config/logstash.yml
  logstash_pipeline:
    file: ./logstash/pipeline/logstash.conf
  kibana_config:
    file: ./kibana/config/kibana.yml

volumes:
  esdata:
    driver: local

    #healthcheck:
    #test:
    # - CMD
    # - curl
    # - '-f'
    #- http://localhost:8080/management/health
    #interval: 5s
    #timeout: 5s
    #retries: 40
    #depends_on:
    #blog-postgresql:
    #condition: service_healthy
  #blog-postgresql:
  #image: postgres:16.3
  #container_name: final-isa-v5-blog-postgresql-1
  #environment:
  #POSTGRES_USER: myuser       # Nombre de usuario para PostgreSQL
  #POSTGRES_PASSWORD: mypassword # Contraseña para el usuario
  #POSTGRES_DB: mydb            # Nombre de la base de datos (opcional)
  #POSTGRES_HOST_AUTH_METHOD: trust # Método de autenticación para el desarrollo
  #healthcheck:
  #test: ["CMD-SHELL", "pg_isready -U myuser"]
  #interval: 10s
  #retries: 5
  #start_period: 30s
  #timeout: 5s
